pipeline:
    name: runtime input test
    identifier: runtime_input_test
    projectIdentifier: Kapil
    orgIdentifier: default
    tags: {}
    stages:
        - stage:
              name: s1
              identifier: s1
              description: ""
              type: Deployment
              spec:
                  serviceConfig:
                      serviceDefinition:
                          type: Kubernetes
                          spec:
                              manifestOverrideSets: []
                              manifests:
                                  - manifest:
                                        identifier: m1
                                        type: K8sManifest
                                        spec:
                                            store:
                                                type: Github
                                                spec:
                                                    connectorRef: <+input>
                                                    gitFetchType: Branch
                                                    paths:
                                                        - fp1
                                                    repoName: <+input>
                                                    branch: b1
                                            skipResourceVersioning: false
                              artifacts:
                                  sidecars: []
                              variables: []
                      serviceRef: dd
                  infrastructure:
                      environmentRef: test
                      infrastructureDefinition:
                          type: KubernetesDirect
                          provisioner:
                              steps:
                                  - step:
                                        type: ShellScript
                                        name: test
                                        identifier: test
                                        timeout: 10m
                                        spec:
                                            shell: Bash
                                            onDelegate: true
                                            source:
                                                type: Inline
                                                spec:
                                                    script: echo hi
                                            environmentVariables: []
                                            outputVariables: []
                                            executionTarget: {}
                                  - step:
                                        type: TerraformRollback
                                        name: tf rollback
                                        identifier: tf_rollback
                                        spec:
                                            provisionerIdentifier: <+input>
                                        timeout: <+input>
                                        when:
                                            stageStatus: Success
                                            condition: "false"
                                  - step:
                                        type: TerraformPlan
                                        name: Terraform Plan
                                        identifier: tf_plan
                                        timeout: 10m
                                        spec:
                                            provisionerIdentifier: <+input>
                                            configuration:
                                                command: Apply
                                                workspace: <+input>
                                                backendConfig:
                                                    type: Inline
                                                    spec:
                                                        content: <+input>
                                                varFiles:
                                                    - varFile:
                                                          type: Remote
                                                          identifier: file2
                                                          spec:
                                                              store:
                                                                  type: Github
                                                                  spec:
                                                                      gitFetchType: Branch
                                                                      branch: <+input>
                                                                      paths: <+input>
                                                                      connectorRef: <+input>
                                                    - varFile:
                                                          type: Inline
                                                          identifier: file1
                                                          spec:
                                                              content: <+input>
                                                configFiles:
                                                    store:
                                                        type: Github
                                                        spec:
                                                            branch: <+input>
                                                            connectorRef: <+pipeline.variables.connectorRef>
                                                            gitFetchType: Branch
                                                            folderPath: <+input>
                                                secretManagerRef: <+input>
                                                targets: <+input>
                                        when:
                                            stageStatus: Success
                                            condition: "true"
                                  - step:
                                        type: TerraformApply
                                        name: dsfgg
                                        identifier: dsfgg
                                        spec:
                                            provisionerIdentifier: <+input>
                                            configuration:
                                                type: InheritFromPlan
                                        timeout: <+input>
                          spec:
                              connectorRef: account.k8s
                              namespace: n1
                              releaseName: r1
                      allowSimultaneousDeployments: false
                      infrastructureKey: k1
                  execution:
                      steps:
                          - step:
                                type: Http
                                name: test
                                identifier: test
                                timeout: 10s
                                spec:
                                    url: https://www.google.com/
                                    method: GET
                                    headers: []
                                    outputVariables: []
                      rollbackSteps: []
              tags: {}
              failureStrategies:
                  - onFailure:
                        errors:
                            - AllErrors
                        action:
                            type: StageRollback
    variables:
        - name: connectorRef
          type: String
          value: terraform_repo
